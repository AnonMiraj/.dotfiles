#!/bin/sh

# Prints the current volume or ðŸ”‡ if muted.

case $BLOCK_BUTTON in
  1) setsid -f "$TERMINAL" -e pulsemixer ;;
  2) wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle ;;
  4) wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%+ ;;
  5) wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%- ;;
  3) notify-send "ðŸ“¢ Volume module" "\- Shows volume ðŸ”Š, ðŸ”‡ if muted.
- Middle click to mute.
- Scroll to change." ;;
  6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

vol="$(wpctl get-volume @DEFAULT_AUDIO_SINK@)"
mic="ï„°"

CURRENT_SOURCE=$(pactl info | grep "Default Source" | cut -f3 -d" ")
[ -n $(pactl list sources | grep -A 10 $CURRENT_SOURCE | grep "Mute: yes") ] && mic="ï„± MUTE"

# If muted, print ï€¦ and exit.
[ "$vol" != "${vol%\[MUTED\]}" ] && echo  "ï€¦" "$mic"  && exit

vol="${vol#Volume: }"

split() {
  # For ommiting the . without calling and external program.
  IFS=$2
  set -- $1
  printf '%s' "$@"
}

vol="$(printf "%.0f" "$(split "$vol" ".")")"

# Get active audio source index
case 1 in
  $((vol >= 70)) ) icon="ï€¨" ;;
  $((vol >= 1)) ) icon="ï€§" ;;
  * ) echo "ï€¦ $mic" && exit ;;
esac

echo "$icon $vol% $mic"
echo "#FF8000"

